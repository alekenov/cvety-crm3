#!/bin/bash

# CRUD —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API /inventory/ —á–µ—Ä–µ–∑ cURL
# –ü–æ–ª–Ω—ã–π –Ω–∞–±–æ—Ä —Ç–µ—Å—Ç–æ–≤ –¥–ª—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã –∏–Ω–≤–µ–Ω—Ç–∞—Ä—è

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
BASE_URL="https://cvety.kz/api/v2/inventory"
ACCESS_TOKEN="ABE7142D-D8AB-76AF-8D6C-2C4FAEA9B144"

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
log() {
    echo -e "${BLUE}[$(date +'%Y-%m-%d %H:%M:%S')] $1${NC}"
}

success() {
    echo -e "${GREEN}‚úÖ $1${NC}"
}

error() {
    echo -e "${RED}‚ùå $1${NC}"
}

warning() {
    echo -e "${YELLOW}‚ö†Ô∏è  $1${NC}"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ HTTP —Å—Ç–∞—Ç—É—Å–∞
check_status() {
    local status=$1
    local expected=$2
    local test_name=$3
    
    if [ "$status" = "$expected" ]; then
        success "$test_name - HTTP $status"
        return 0
    else
        error "$test_name - Expected HTTP $expected, got $status"
        return 1
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∑–∞–ø—Ä–æ—Å–æ–≤ —Å —Ç–∞–π–º–∞—É—Ç–æ–º
api_request() {
    local method=$1
    local url=$2
    local data=$3
    local description=$4
    
    log "$description"
    
    if [ -n "$data" ]; then
        curl -s -w "HTTP_STATUS:%{http_code}" \
             -X "$method" \
             -H "Content-Type: application/json" \
             --connect-timeout 10 \
             --max-time 30 \
             -d "$data" \
             "$url"
    else
        curl -s -w "HTTP_STATUS:%{http_code}" \
             -X "$method" \
             --connect-timeout 10 \
             --max-time 30 \
             "$url"
    fi
}

echo "üöÄ –ó–∞–ø—É—Å–∫ CRUD —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è API /inventory/"
echo "========================================="

# =============================================================================
# 1. READ –û–ü–ï–†–ê–¶–ò–ò - –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö
# =============================================================================

log "üìñ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï READ –û–ü–ï–†–ê–¶–ò–ô"
echo "--------------------------------"

# 1.1 –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ —Ç–æ–≤–∞—Ä–æ–≤ (–±–∞–∑–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å)
log "1.1 –ë–∞–∑–æ–≤—ã–π —Å–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤"
RESPONSE=$(api_request "GET" "${BASE_URL}/?access_token=${ACCESS_TOKEN}" "" "–ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ —Ç–æ–≤–∞—Ä–æ–≤")

HTTP_STATUS=$(echo "$RESPONSE" | grep -o "HTTP_STATUS:[0-9]*" | cut -d: -f2)
BODY=$(echo "$RESPONSE" | sed 's/HTTP_STATUS:[0-9]*$//')

check_status "$HTTP_STATUS" "200" "–ë–∞–∑–æ–≤—ã–π —Å–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤"
echo "$BODY" | jq -r '.data | length' | xargs -I {} echo "–ü–æ–ª—É—á–µ–Ω–æ —Ç–æ–≤–∞—Ä–æ–≤: {}"

# 1.2 –¢–µ—Å—Ç –ø–∞–≥–∏–Ω–∞—Ü–∏–∏
log "1.2 –¢–µ—Å—Ç –ø–∞–≥–∏–Ω–∞—Ü–∏–∏ (limit=5, offset=0)"
RESPONSE=$(api_request "GET" "${BASE_URL}/?access_token=${ACCESS_TOKEN}&limit=5&offset=0" "" "–ü–µ—Ä–≤—ã–µ 5 —Ç–æ–≤–∞—Ä–æ–≤")
HTTP_STATUS=$(echo "$RESPONSE" | grep -o "HTTP_STATUS:[0-9]*" | cut -d: -f2)
BODY=$(echo "$RESPONSE" | sed 's/HTTP_STATUS:[0-9]*$//')

check_status "$HTTP_STATUS" "200" "–ü–∞–≥–∏–Ω–∞—Ü–∏—è (–ø–µ—Ä–≤–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞)"
TOTAL=$(echo "$BODY" | jq -r '.pagination.total // 0')
HAS_MORE=$(echo "$BODY" | jq -r '.pagination.hasMore // false')
echo "–í—Å–µ–≥–æ —Ç–æ–≤–∞—Ä–æ–≤: $TOTAL, –µ—Å—Ç—å –µ—â—ë: $HAS_MORE"

# 1.3 –¢–µ—Å—Ç –ø–æ–∏—Å–∫–∞
log "1.3 –¢–µ—Å—Ç –ø–æ–∏—Å–∫–∞ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é"
SEARCH_TERMS=("Country" "roses" "Test")

for term in "${SEARCH_TERMS[@]}"; do
    log "–ü–æ–∏—Å–∫ –ø–æ: '$term'"
    RESPONSE=$(api_request "GET" "${BASE_URL}/?access_token=${ACCESS_TOKEN}&search=$term&limit=3" "" "–ü–æ–∏—Å–∫: $term")
    HTTP_STATUS=$(echo "$RESPONSE" | grep -o "HTTP_STATUS:[0-9]*" | cut -d: -f2)
    BODY=$(echo "$RESPONSE" | sed 's/HTTP_STATUS:[0-9]*$//')
    
    if check_status "$HTTP_STATUS" "200" "–ü–æ–∏—Å–∫ '$term'"; then
        COUNT=$(echo "$BODY" | jq -r '.data | length')
        echo "  –ù–∞–π–¥–µ–Ω–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤: $COUNT"
    fi
done

# 1.4 –¢–µ—Å—Ç —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –ø–æ —Ç–∏–ø—É —Ü–≤–µ—Ç–æ–≤
log "1.4 –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø–æ —Ç–∏–ø—É —Ü–≤–µ—Ç–æ–≤"
FLOWER_TYPES=("roses" "tulips")

for flower in "${FLOWER_TYPES[@]}"; do
    log "–§–∏–ª—å—Ç—Ä –ø–æ —Ü–≤–µ—Ç–∞–º: '$flower'"
    RESPONSE=$(api_request "GET" "${BASE_URL}/?access_token=${ACCESS_TOKEN}&flower=$flower&limit=5" "" "–§–∏–ª—å—Ç—Ä: $flower")
    HTTP_STATUS=$(echo "$RESPONSE" | grep -o "HTTP_STATUS:[0-9]*" | cut -d: -f2)
    
    if check_status "$HTTP_STATUS" "200" "–§–∏–ª—å—Ç—Ä '$flower'"; then
        BODY=$(echo "$RESPONSE" | sed 's/HTTP_STATUS:[0-9]*$//')
        COUNT=$(echo "$BODY" | jq -r '.data | length')
        echo "  –ù–∞–π–¥–µ–Ω–æ —Ç–æ–≤–∞—Ä–æ–≤ —Ç–∏–ø–∞ '$flower': $COUNT"
    fi
done

# 1.5 –¢–µ—Å—Ç —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –ø–æ —É—Å–ª—É–≥–∞–º
log "1.5 –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø–æ —É—Å–ª—É–≥–∞–º"
RESPONSE=$(api_request "GET" "${BASE_URL}/?access_token=${ACCESS_TOKEN}&service=true&limit=10" "" "–¢–æ–ª—å–∫–æ —É—Å–ª—É–≥–∏")
HTTP_STATUS=$(echo "$RESPONSE" | grep -o "HTTP_STATUS:[0-9]*" | cut -d: -f2)

if check_status "$HTTP_STATUS" "200" "–§–∏–ª—å—Ç—Ä —É—Å–ª—É–≥"; then
    BODY=$(echo "$RESPONSE" | sed 's/HTTP_STATUS:[0-9]*$//')
    COUNT=$(echo "$BODY" | jq -r '.data | length')
    echo "  –ù–∞–π–¥–µ–Ω–æ —É—Å–ª—É–≥: $COUNT"
fi

# 1.6 –¢–µ—Å—Ç —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏
log "1.6 –¢–µ—Å—Ç —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏"
RESPONSE=$(api_request "GET" "${BASE_URL}/?access_token=${ACCESS_TOKEN}&sort_by=cost&sort_order=desc&limit=5" "" "–°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –ø–æ —Ü–µ–Ω–µ —É–±—ã–≤–∞–Ω–∏–µ")
HTTP_STATUS=$(echo "$RESPONSE" | grep -o "HTTP_STATUS:[0-9]*" | cut -d: -f2)

if check_status "$HTTP_STATUS" "200" "–°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –ø–æ —Ü–µ–Ω–µ"; then
    BODY=$(echo "$RESPONSE" | sed 's/HTTP_STATUS:[0-9]*$//')
    echo "  –ü–µ—Ä–≤—ã–µ 3 —Ç–æ–≤–∞—Ä–∞ –ø–æ —É–±—ã–≤–∞–Ω–∏—é —Ü–µ–Ω—ã:"
    echo "$BODY" | jq -r '.data[:3] | .[] | "  - \(.name): \(.cost) ‚Ç∏"'
fi

# 1.7 –ü–æ–ª—É—á–µ–Ω–∏–µ –∏—Å—Ç–æ—Ä–∏–∏ –æ–ø–µ—Ä–∞—Ü–∏–π
log "1.7 –¢–µ—Å—Ç –ø–æ–ª—É—á–µ–Ω–∏—è –∏—Å—Ç–æ—Ä–∏–∏ –æ–ø–µ—Ä–∞—Ü–∏–π"
# –ü–æ–ª—É—á–∞–µ–º ID –ø–µ—Ä–≤–æ–≥–æ —Ç–æ–≤–∞—Ä–∞
FIRST_ITEM_ID=$(echo "$BODY" | jq -r '.data[0].id // 89')

RESPONSE=$(api_request "GET" "${BASE_URL}/history/?access_token=${ACCESS_TOKEN}&id=${FIRST_ITEM_ID}&limit=5" "" "–ò—Å—Ç–æ—Ä–∏—è —Ç–æ–≤–∞—Ä–∞ ID:$FIRST_ITEM_ID")
HTTP_STATUS=$(echo "$RESPONSE" | grep -o "HTTP_STATUS:[0-9]*" | cut -d: -f2)

if check_status "$HTTP_STATUS" "200" "–ò—Å—Ç–æ—Ä–∏—è –æ–ø–µ—Ä–∞—Ü–∏–π"; then
    BODY=$(echo "$RESPONSE" | sed 's/HTTP_STATUS:[0-9]*$//')
    HISTORY_COUNT=$(echo "$BODY" | jq -r '.data | length')
    echo "  –û–ø–µ—Ä–∞—Ü–∏–π –≤ –∏—Å—Ç–æ—Ä–∏–∏: $HISTORY_COUNT"
fi

# =============================================================================
# 2. CREATE –û–ü–ï–†–ê–¶–ò–ò - –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–∏—è —Ç–æ–≤–∞—Ä–æ–≤
# =============================================================================

log "üìù –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï CREATE –û–ü–ï–†–ê–¶–ò–ô"
echo "--------------------------------"

# 2.1 –°–æ–∑–¥–∞–Ω–∏–µ –æ–±—ã—á–Ω–æ–≥–æ —Ç–æ–≤–∞—Ä–∞
log "2.1 –°–æ–∑–¥–∞–Ω–∏–µ –æ–±—ã—á–Ω–æ–≥–æ —Ç–æ–≤–∞—Ä–∞"
TEST_ITEM_NAME="CRUD_Test_Item_$(date +%s)"

CREATE_DATA="{
    \"access_token\": \"$ACCESS_TOKEN\",
    \"name\": \"$TEST_ITEM_NAME\",
    \"cost\": 500,
    \"quantity\": 25,
    \"markup\": 50,
    \"location\": \"Test Location\",
    \"service\": false,
    \"flower\": \"roses\",
    \"deactivate\": false
}"

RESPONSE=$(api_request "POST" "${BASE_URL}/create/" "$CREATE_DATA" "–°–æ–∑–¥–∞–Ω–∏–µ –æ–±—ã—á–Ω–æ–≥–æ —Ç–æ–≤–∞—Ä–∞")
HTTP_STATUS=$(echo "$RESPONSE" | grep -o "HTTP_STATUS:[0-9]*" | cut -d: -f2)
BODY=$(echo "$RESPONSE" | sed 's/HTTP_STATUS:[0-9]*$//')

if check_status "$HTTP_STATUS" "200" "–°–æ–∑–¥–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞"; then
    success "–¢–æ–≤–∞—Ä '$TEST_ITEM_NAME' —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ"
    CREATED_ITEM_ID=$(echo "$BODY" | jq -r '.data.id // null')
    echo "  –°–æ–∑–¥–∞–Ω —Ç–æ–≤–∞—Ä —Å ID: $CREATED_ITEM_ID"
else
    error "–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ç–æ–≤–∞—Ä–∞: $BODY"
fi

# 2.2 –°–æ–∑–¥–∞–Ω–∏–µ —É—Å–ª—É–≥–∏
log "2.2 –°–æ–∑–¥–∞–Ω–∏–µ —É—Å–ª—É–≥–∏"
SERVICE_NAME="CRUD_Test_Service_$(date +%s)"

SERVICE_DATA="{
    \"access_token\": \"$ACCESS_TOKEN\",
    \"name\": \"$SERVICE_NAME\",
    \"cost\": 1000,
    \"quantity\": 1,
    \"markup\": 0,
    \"location\": \"Office\",
    \"service\": true,
    \"flower\": \"\",
    \"deactivate\": false
}"

RESPONSE=$(api_request "POST" "${BASE_URL}/create/" "$SERVICE_DATA" "–°–æ–∑–¥–∞–Ω–∏–µ —É—Å–ª—É–≥–∏")
HTTP_STATUS=$(echo "$RESPONSE" | grep -o "HTTP_STATUS:[0-9]*" | cut -d: -f2)

if check_status "$HTTP_STATUS" "200" "–°–æ–∑–¥–∞–Ω–∏–µ —É—Å–ª—É–≥–∏"; then
    BODY=$(echo "$RESPONSE" | sed 's/HTTP_STATUS:[0-9]*$//')
    success "–£—Å–ª—É–≥–∞ '$SERVICE_NAME' —Å–æ–∑–¥–∞–Ω–∞ —É—Å–ø–µ—à–Ω–æ"
    SERVICE_ID=$(echo "$BODY" | jq -r '.data.id // null')
    echo "  –°–æ–∑–¥–∞–Ω–∞ —É—Å–ª—É–≥–∞ —Å ID: $SERVICE_ID"
fi

# 2.3 –¢–µ—Å—Ç –≤–∞–ª–∏–¥–∞—Ü–∏–∏ - –ø–æ–ø—ã—Ç–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –±–µ–∑ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö –ø–æ–ª–µ–π
log "2.3 –¢–µ—Å—Ç –≤–∞–ª–∏–¥–∞—Ü–∏–∏ - —Å–æ–∑–¥–∞–Ω–∏–µ –±–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è"

INVALID_DATA="{
    \"access_token\": \"$ACCESS_TOKEN\",
    \"cost\": 100,
    \"quantity\": 1
}"

RESPONSE=$(api_request "POST" "${BASE_URL}/create/" "$INVALID_DATA" "–°–æ–∑–¥–∞–Ω–∏–µ –±–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è")
HTTP_STATUS=$(echo "$RESPONSE" | grep -o "HTTP_STATUS:[0-9]*" | cut -d: -f2)

if [ "$HTTP_STATUS" != "200" ]; then
    success "–í–∞–ª–∏–¥–∞—Ü–∏—è —Ä–∞–±–æ—Ç–∞–µ—Ç - —Å–æ–∑–¥–∞–Ω–∏–µ –±–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è –æ—Ç–∫–ª–æ–Ω–µ–Ω–æ (HTTP $HTTP_STATUS)"
else
    warning "–í–∞–ª–∏–¥–∞—Ü–∏—è –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª–∞ - —Ç–æ–≤–∞—Ä –±–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è –±—ã–ª —Å–æ–∑–¥–∞–Ω"
fi

# =============================================================================
# 3. UPDATE –û–ü–ï–†–ê–¶–ò–ò - –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–æ–≤
# =============================================================================

log "üîÑ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï UPDATE –û–ü–ï–†–ê–¶–ò–ô"
echo "--------------------------------"

if [ -n "$CREATED_ITEM_ID" ] && [ "$CREATED_ITEM_ID" != "null" ]; then
    # 3.1 –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —Ç–æ–≤–∞—Ä–∞
    log "3.1 –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —Ç–æ–≤–∞—Ä–∞ ID: $CREATED_ITEM_ID"
    
    UPDATE_DATA="{
        \"access_token\": \"$ACCESS_TOKEN\",
        \"id\": $CREATED_ITEM_ID,
        \"quantity\": 50
    }"
    
    RESPONSE=$(api_request "POST" "${BASE_URL}/item/" "$UPDATE_DATA" "–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞")
    HTTP_STATUS=$(echo "$RESPONSE" | grep -o "HTTP_STATUS:[0-9]*" | cut -d: -f2)
    
    if check_status "$HTTP_STATUS" "200" "–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞"; then
        success "–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–≤–∞—Ä–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–æ –Ω–∞ 50"
    fi
    
    # 3.2 –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ü–µ–Ω—ã –∏ –Ω–∞—Ü–µ–Ω–∫–∏
    log "3.2 –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ü–µ–Ω—ã –∏ –Ω–∞—Ü–µ–Ω–∫–∏"
    
    PRICE_UPDATE_DATA="{
        \"access_token\": \"$ACCESS_TOKEN\",
        \"id\": $CREATED_ITEM_ID,
        \"cost\": 750,
        \"markup\": 75
    }"
    
    RESPONSE=$(api_request "POST" "${BASE_URL}/item/" "$PRICE_UPDATE_DATA" "–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ü–µ–Ω—ã")
    HTTP_STATUS=$(echo "$RESPONSE" | grep -o "HTTP_STATUS:[0-9]*" | cut -d: -f2)
    
    check_status "$HTTP_STATUS" "200" "–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ü–µ–Ω—ã –∏ –Ω–∞—Ü–µ–Ω–∫–∏"
else
    warning "–ü—Ä–æ–ø—É—Å–∫ UPDATE —Ç–µ—Å—Ç–æ–≤ - –Ω–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å —Ç–µ—Å—Ç–æ–≤—ã–π —Ç–æ–≤–∞—Ä"
fi

# =============================================================================
# 4. DELETE –û–ü–ï–†–ê–¶–ò–ò - –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —É–¥–∞–ª–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–æ–≤
# =============================================================================

log "üóëÔ∏è –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï DELETE –û–ü–ï–†–ê–¶–ò–ô"
echo "--------------------------------"

if [ -n "$CREATED_ITEM_ID" ] && [ "$CREATED_ITEM_ID" != "null" ]; then
    # 4.1 –î–µ–∞–∫—Ç–∏–≤–∞—Ü–∏—è —Ç–æ–≤–∞—Ä–∞
    log "4.1 –î–µ–∞–∫—Ç–∏–≤–∞—Ü–∏—è —Ç–æ–≤–∞—Ä–∞"
    
    DEACTIVATE_DATA="{
        \"access_token\": \"$ACCESS_TOKEN\",
        \"id\": $CREATED_ITEM_ID,
        \"deactivate\": true
    }"
    
    RESPONSE=$(api_request "POST" "${BASE_URL}/item/" "$DEACTIVATE_DATA" "–î–µ–∞–∫—Ç–∏–≤–∞—Ü–∏—è —Ç–æ–≤–∞—Ä–∞")
    HTTP_STATUS=$(echo "$RESPONSE" | grep -o "HTTP_STATUS:[0-9]*" | cut -d: -f2)
    
    if check_status "$HTTP_STATUS" "200" "–î–µ–∞–∫—Ç–∏–≤–∞—Ü–∏—è —Ç–æ–≤–∞—Ä–∞"; then
        success "–¢–æ–≤–∞—Ä –¥–µ–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω"
    fi
    
    # 4.2 –û–∫–æ–Ω—á–∞—Ç–µ–ª—å–Ω–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞
    log "4.2 –£–¥–∞–ª–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞"
    
    DELETE_DATA="{
        \"access_token\": \"$ACCESS_TOKEN\",
        \"id\": $CREATED_ITEM_ID
    }"
    
    RESPONSE=$(api_request "DELETE" "${BASE_URL}/item/" "$DELETE_DATA" "–£–¥–∞–ª–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞")
    HTTP_STATUS=$(echo "$RESPONSE" | grep -o "HTTP_STATUS:[0-9]*" | cut -d: -f2)
    
    check_status "$HTTP_STATUS" "200" "–£–¥–∞–ª–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞"
fi

# –£–¥–∞–ª–µ–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–π —É—Å–ª—É–≥–∏
if [ -n "$SERVICE_ID" ] && [ "$SERVICE_ID" != "null" ]; then
    log "4.3 –£–¥–∞–ª–µ–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–π —É—Å–ª—É–≥–∏"
    
    DELETE_SERVICE_DATA="{
        \"access_token\": \"$ACCESS_TOKEN\",
        \"id\": $SERVICE_ID
    }"
    
    RESPONSE=$(api_request "DELETE" "${BASE_URL}/item/" "$DELETE_SERVICE_DATA" "–£–¥–∞–ª–µ–Ω–∏–µ —É—Å–ª—É–≥–∏")
    HTTP_STATUS=$(echo "$RESPONSE" | grep -o "HTTP_STATUS:[0-9]*" | cut -d: -f2)
    
    check_status "$HTTP_STATUS" "200" "–£–¥–∞–ª–µ–Ω–∏–µ —É—Å–ª—É–≥–∏"
fi

# =============================================================================
# 5. –ì–†–ê–ù–ò–ß–ù–´–ï –°–õ–£–ß–ê–ò –ò –ù–ê–ì–†–£–ó–û–ß–ù–û–ï –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï
# =============================================================================

log "üîç –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ì–†–ê–ù–ò–ß–ù–´–• –°–õ–£–ß–ê–ï–í"
echo "--------------------------------"

# 5.1 –ù–µ–≤–µ—Ä–Ω—ã–π —Ç–æ–∫–µ–Ω –¥–æ—Å—Ç—É–ø–∞
log "5.1 –¢–µ—Å—Ç —Å –Ω–µ–≤–µ—Ä–Ω—ã–º —Ç–æ–∫–µ–Ω–æ–º"
RESPONSE=$(api_request "GET" "${BASE_URL}/?access_token=invalid_token" "" "–ù–µ–≤–µ—Ä–Ω—ã–π —Ç–æ–∫–µ–Ω")
HTTP_STATUS=$(echo "$RESPONSE" | grep -o "HTTP_STATUS:[0-9]*" | cut -d: -f2)

if [ "$HTTP_STATUS" = "401" ] || [ "$HTTP_STATUS" = "403" ]; then
    success "–ù–µ–∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã–π –¥–æ—Å—Ç—É–ø –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –æ—Ç–∫–ª–æ–Ω–µ–Ω (HTTP $HTTP_STATUS)"
else
    error "–ù–µ–≤–µ—Ä–Ω—ã–π —Ç–æ–∫–µ–Ω –Ω–µ –±—ã–ª –æ—Ç–∫–ª–æ–Ω–µ–Ω (HTTP $HTTP_STATUS)"
fi

# 5.2 –û—á–µ–Ω—å –±–æ–ª—å—à–æ–π –ª–∏–º–∏—Ç
log "5.2 –¢–µ—Å—Ç —Å –±–æ–ª—å—à–∏–º –ª–∏–º–∏—Ç–æ–º"
RESPONSE=$(api_request "GET" "${BASE_URL}/?access_token=${ACCESS_TOKEN}&limit=1000" "" "–ë–æ–ª—å—à–æ–π –ª–∏–º–∏—Ç")
HTTP_STATUS=$(echo "$RESPONSE" | grep -o "HTTP_STATUS:[0-9]*" | cut -d: -f2)

check_status "$HTTP_STATUS" "200" "–ë–æ–ª—å—à–æ–π –ª–∏–º–∏—Ç"

# 5.3 –ü–æ–∏—Å–∫ —Å —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–º–∏ —Å–∏–º–≤–æ–ª–∞–º–∏
log "5.3 –ü–æ–∏—Å–∫ —Å —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–º–∏ —Å–∏–º–≤–æ–ª–∞–º–∏"
SPECIAL_SEARCHES=("test%20item" "item&sort=name" "item<script>" "item'OR'1'='1")

for search in "${SPECIAL_SEARCHES[@]}"; do
    RESPONSE=$(api_request "GET" "${BASE_URL}/?access_token=${ACCESS_TOKEN}&search=${search}" "" "–ü–æ–∏—Å–∫: $search")
    HTTP_STATUS=$(echo "$RESPONSE" | grep -o "HTTP_STATUS:[0-9]*" | cut -d: -f2)
    
    if [ "$HTTP_STATUS" = "200" ]; then
        success "–ü–æ–∏—Å–∫ —Å —Å–ø–µ—Ü—Å–∏–º–≤–æ–ª–∞–º–∏ –æ–±—Ä–∞–±–æ—Ç–∞–Ω –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ"
    else
        warning "–ü—Ä–æ–±–ª–µ–º–∞ —Å –ø–æ–∏—Å–∫–æ–º '$search' (HTTP $HTTP_STATUS)"
    fi
done

echo ""
echo "========================================="
success "üéâ CRUD —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API /inventory/ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!"
echo "========================================="

# –í—ã–≤–æ–¥ –∏—Ç–æ–≥–æ–≤–æ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
log "üìä –°–≤–æ–¥–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:"
echo "- –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω—ã –≤—Å–µ CRUD –æ–ø–µ—Ä–∞—Ü–∏–∏"
echo "- –ü—Ä–æ–≤–µ—Ä–µ–Ω—ã –≥—Ä–∞–Ω–∏—á–Ω—ã–µ —Å–ª—É—á–∞–∏"
echo "- –ü—Ä–æ–≤–µ—Ä–µ–Ω–∞ –≤–∞–ª–∏–¥–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö"
echo "- –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω—ã —Ñ–∏–ª—å—Ç—Ä—ã –∏ –ø–æ–∏—Å–∫"
echo "- –ü—Ä–æ–≤–µ—Ä–µ–Ω–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å —Ç–æ–∫–µ–Ω–æ–≤"

exit 0